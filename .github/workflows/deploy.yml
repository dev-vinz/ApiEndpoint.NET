name: üöÄ Build, Test, Deploy & Release

on:
    push:
        tags:
            - "v*"

permissions:
    contents: write
    packages: write

jobs:
    build:
        runs-on: ubuntu-latest
        steps:
            - name: üìÇ Checkout code
              uses: actions/checkout@v3

            - name: ‚öôÔ∏è Set up .NET
              uses: actions/setup-dotnet@v3
              with:
                  dotnet-version: 8.0

            - name: üîÑ Restore dependencies
              run: dotnet restore ApiEndpoint.sln

            - name: üèóÔ∏è Build solution
              run: dotnet build ApiEndpoint.sln --configuration Release

            - name: üì¶ Upload main build artifacts
              uses: actions/upload-artifact@v4
              with:
                  name: main-build-artifacts
                  path: ApiEndpoint/bin/Release/net8.0/
                  if-no-files-found: error

            - name: üì¶ Upload test artifacts
              uses: actions/upload-artifact@v4
              with:
                  name: test-artifacts
                  path: ApiEndpoint.Tests/bin/Release/net8.0/
                  if-no-files-found: error

    test:
        runs-on: ubuntu-latest
        needs: build
        steps:
            - name: üìÇ Checkout code
              uses: actions/checkout@v3

            - name: ‚öôÔ∏è Set up .NET
              uses: actions/setup-dotnet@v3
              with:
                  dotnet-version: 8.0

            - name: üì¶ Download test artifacts
              uses: actions/download-artifact@v4
              with:
                  name: test-artifacts

            - name: üß™ Run tests
              run: dotnet test ApiEndpoint.Tests.dll --no-build --verbosity normal

    deploy:
        runs-on: ubuntu-latest
        needs: test
        steps:
            - name: üìÇ Checkout code
              uses: actions/checkout@v3

            - name: ‚öôÔ∏è Set up .NET
              uses: actions/setup-dotnet@v3
              with:
                  dotnet-version: 8.0

            - name: üì¶ Download main build artifacts
              uses: actions/download-artifact@v4
              with:
                  name: main-build-artifacts

            - name: üîç Extract version from tag
              id: get-version
              run: |
                  echo "VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_ENV
                  echo "Extracted version: ${{ env.VERSION }}"

            - name: üì¶ Pack package
              run: dotnet pack ApiEndpoint/ApiEndpoint.csproj --configuration Release -p:Version=${{ env.VERSION }} -o ./nuget-packages

            - name: üì¶ Upload NuGet package as artifact
              uses: actions/upload-artifact@v4
              with:
                  name: nuget-package
                  path: ./nuget-packages/*.nupkg

            - name: üöÄ Push package
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              run: dotnet nuget push ./nuget-packages/*.nupkg --api-key $GITHUB_TOKEN --source https://nuget.pkg.github.com/dev-vinz/index.json

    release:
        runs-on: ubuntu-latest
        needs: deploy
        steps:
            - name: üìÇ Checkout code
              uses: actions/checkout@v3

            - name: üì¶ Download NuGet package artifact
              uses: actions/download-artifact@v4
              with:
                  name: nuget-package

            - name: üîç Extract version from tag
              id: get-version
              run: |
                  echo "VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_ENV
                  echo "Extracted version: ${{ env.VERSION }}"

            - name: üè∑Ô∏è Release Package
              uses: softprops/action-gh-release@v2
              with:
                  name: Release ${{ github.ref_name }}
                  tag_name: ${{ github.ref_name }}
                  body: |
                      ### What's Changed
                      - Deployment and package publishing for version ${{ github.ref_name }}.
                  files: ./ApiEndpoint.${{ env.VERSION }}.nupkg
                  draft: false
                  prerelease: false
                  token: ${{ secrets.GITHUB_TOKEN }}
